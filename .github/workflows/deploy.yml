name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{secrets.DO_HOST}}
          username: ${{secrets.DO_USERNAME}}
          key: ${{secrets.DO_SSH_KEY}}
          script: |
            # Navigate to the application directory
            cd ~/mysecondbrain.info-BE

            # Set application environment variables
            set -o allexport; source .env.production; set +o allexport

            # Pull the latest code
            git checkout main
            git pull
            
            # Make all scripts executable
            chmod +x ./nginx/init-letsencrypt.sh
            chmod +x ./nginx/renew-certs.sh
            chmod +x ./nginx/setup-renewal-cron.sh
            
            # Check if SSL certificates have been set up
            if [ ! -f ".env.ssl" ]; then
              echo "SSL environment file not found. Running initial SSL setup..."
              
              # Create required directories
              mkdir -p ./nginx/logs
              mkdir -p ./nginx/templates
              mkdir -p ./data/certbot/www
              mkdir -p ./data/certbot/conf
              
              # Run the initialization script to set up SSL certificates
              ./nginx/init-letsencrypt.sh
              
              # Set up automatic renewal cron job
              ./nginx/setup-renewal-cron.sh
              
              echo "Initial SSL setup complete."
            else
              echo "SSL is already set up. Using existing configuration."
              
              # Check if any certificates need renewal
              ./nginx/renew-certs.sh
              
              # Stop the current containers
              docker compose --env-file .env.ssl -f docker-compose.production.yml down
              
              # Start the containers with SSL configuration
              docker compose --env-file .env.ssl -f docker-compose.production.yml up -d --build
            fi
            
            # Clean up unused Docker resources (keep images used in last 24h)
            docker system prune -a --filter "until=24h" -f 