user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    sendfile on;
    keepalive_timeout 65;
    
    # Set maximum body size to 10MB
    client_max_body_size 10M;
    
    # Increase timeouts for handling large uploads
    client_body_timeout 120s;
    client_header_timeout 120s;
    
    # Disable request body buffering to handle large uploads more efficiently
    proxy_request_buffering off;
    
    # Increase proxy buffers for larger content
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    
    # Increase proxy timeouts for large file transfers
    proxy_connect_timeout 120s;
    proxy_send_timeout 120s;
    proxy_read_timeout 120s;
    
    # Add DNS resolver
    resolver 8.8.8.8;

    # Real IP configuration for trusted proxy chain
    # This preserves the client's real IP while maintaining security
    real_ip_header X-Forwarded-For;
    # Trust all incoming requests since this is a public-facing reverse proxy
    set_real_ip_from 0.0.0.0/0;
    real_ip_recursive on;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name ${DOMAIN};
        
        # Set maximum body size to 10MB for this server block as well
        client_max_body_size 10M;
        
        # Important: Certbot webroot challenge location
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
            try_files $uri =404;
        }
        
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS Server
    server {
        listen 443 ssl;
        server_name ${DOMAIN};
        
        # Set maximum body size to 10MB for this server block as well
        client_max_body_size 10M;
        
        # SSL Certificate files
        ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;
        
        # Security Headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-Frame-Options SAMEORIGIN;
        
        # Proxy API requests to Node.js application
        location / {
            proxy_pass http://api:3500;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Additional headers for rate limiting
            proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
            proxy_set_header X-Client-IP $remote_addr;
            
            # Disable request body buffering for file uploads
            proxy_request_buffering off;
            
            # Timeouts
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }
    }
} 