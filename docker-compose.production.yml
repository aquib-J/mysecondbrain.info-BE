services:
  # Weaviate Vector Database
  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.29.1
    ports:
      - "8080:8080"
      - "50051:50051"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      ENABLE_API_BASED_MODULES: 'true'
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:8080/v1/meta"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js Express Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3500:3500"
    depends_on:
      - weaviate
      - redis
    env_file:
      - .env.production
    environment:
      REDIS_URL: redis://redis:6379
      WEAVIATE_HOST: weaviate:8080
      WEAVIATE_SCHEME: http
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:3500/status"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
      - ./nginx/logs:/var/log/nginx
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      api:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: "/bin/sh -c 'envsubst \"$$NGINX_DOMAIN\" < /etc/nginx/templates/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g \"daemon off;\"'"
    environment:
      - NGINX_DOMAIN=${DOMAIN:-api.mysecondbrain.info}

  certbot:
    image: certbot/certbot:latest
    volumes:
      - certbot_www:/var/www/certbot
      - certbot_conf:/etc/letsencrypt
    depends_on:
      - nginx
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network
    restart: unless-stopped
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${EMAIL:-aquib.jansher@gmail.com} --agree-tos --no-eff-email -d ${DOMAIN:-api.mysecondbrain.info}

networks:
  app-network:
    driver: bridge

volumes:
  weaviate_data:
  redis_data:
  certbot_www:
  certbot_conf: 