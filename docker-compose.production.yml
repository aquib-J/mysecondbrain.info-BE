services:
  # Weaviate Vector Database
  weaviate:
    image: cr.weaviate.io/semitechnologies/weaviate:1.29.1
    ports:
      - "8080:8080"
      - "50051:50051"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      ENABLE_API_BASED_MODULES: 'true'
      CLUSTER_HOSTNAME: 'node1'
    volumes:
      - weaviate_data:/var/lib/weaviate
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:8080/v1/meta"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching - SECURED
  redis:
    image: redis:latest
    command: redis-server --bind 127.0.0.1 --appendonly yes -requirepass ${REDIS_PASSWORD}
    ports:
      - "127.0.0.1:6379:6379"  # Only expose Redis locally
    volumes:
      - redis_data:/data
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Node.js Express Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3500:3500"
    depends_on:
      - weaviate
      - redis
    env_file:
      - .env.production
    environment:
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      WEAVIATE_HOST: weaviate:8080
      WEAVIATE_SCHEME: http
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "http://localhost:3500/status"]
      interval: 30s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:stable-alpine
    volumes:
      - ./nginx/templates:/etc/nginx/templates
      - ./data/certbot/www:/var/www/certbot
      - ./data/certbot/conf:/etc/letsencrypt
      - ./nginx/logs:/var/log/nginx
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - api
    networks:
      - app-network
    restart: unless-stopped
    command: >
      /bin/sh -c "envsubst '$$DOMAIN' < /etc/nginx/templates/nginx.conf.template > /etc/nginx/nginx.conf && 
      nginx -g 'daemon off;'"
    environment:
      - DOMAIN=${DOMAIN:-api.mysecondbrain.info}

networks:
  app-network:
    driver: bridge

volumes:
  weaviate_data:
  redis_data: 